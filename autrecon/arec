#!/usr/bin/python

# Start recon with URL as parameter
# dirscan, wafwoof, gobuster, subfinder

import os, sys, argparse, shutil, subprocess, re

#GOBUSTER_WORDLIST='/usr/share/wordlists/dirb/big.txt'
GOBUSTER_WORDLIST='test.txt'

parser = argparse.ArgumentParser(description='Automatic recon para pentest')
parser.add_argument('--hostlist', '-l', type=str, help='Lista de Hosts ou URLs')

def divider():
    s, _ = shutil.get_terminal_size()
    print("-" * s)

def screen_block(text):
    text = str(text)
    tsize, _ = shutil.get_terminal_size()
    blankspace_size = (tsize - len(text)) // 2
    blankspace = ' ' * (blankspace_size - 1)
    divider()
    print('|' + blankspace + text + blankspace + '|')
    divider()

def run_wafwoof():
    screen_block('WAF detection')
    os.system(command)
    with open(args.hostlist, 'r') as f:
        file_host = f.readline()
        while file_host:
            command = f"wafw00f {file_host.strip()} | egrep '\[[+-]\]'"
            os.system(command)
            file_host = f.readline()

# Runs NMAP and returns the ports open
def run_nmap():
    screen_block('NMAP - Open ports, Syn Scan')
    command = "sudo nmap -sS -iL hosts.txt -vv --open --top-ports=10 -oN recon/nmap.txt | grep /tcp | grep -v 'Discovered'"
    with subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.DEVNULL, shell=True, text=True, universal_newlines=True) as p:
        output = ''
        for l in p.stdout:
            print(l, end='', flush=True)
            output = f'{output}{l}'
        pattern = r"([0-9]+)/tcp"
        return re.findall(pattern, output)

def run_gobuster():
    with open(args.hostlist, 'r') as f:
        file_host = f.readline()
        while file_host:
            screen_block(f'Directories GOBUSTER {GOBUSTER_WORDLIST}')
            command = f'gobuster dir -t 50 --wordlist={GOBUSTER_WORDLIST} -u {file_host.strip()} --random-agent --no-error -r -q -e'
            os.system(command)
            file_host = f.readline()

def run_subfinder():
    command = f'subfinder -dL {args.hostlist} -silent'
    divider()
    print(f'Subfinder:\n{command}\n')
    os.system(command)

if __name__=='__main__':
    args = parser.parse_args()
    if(args.hostlist is not None):
        ports = run_nmap()
        if('80' in ports):
            run_wafwoof()
            run_gobuster()
        #run_gobuster()
        #run_subfinder()
    # os.system(f'gobuster dir -t 50 --wordlist=/usr/share/wordlists/dirb/big.txt {args.hostlist} ')
